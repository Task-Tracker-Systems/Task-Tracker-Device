; PlatformIO Project Configuration File
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

;-------------------------------------------------------
; global PIO parameters                                |
;-------------------------------------------------------
[platformio]
;default build enfironment for PIO project
default_envs = esp32-s3-devkitc-1

;Path to source files relative to PIO project
; see https://docs.platformio.org/en/stable/projectconf/sections/platformio/options/directory/src_dir.html
src_dir = src

;switch "include" path to be src as well, as we decide to have headers and sources in same directories
; this prevents the build environment from complaining the path not existing
include_dir = src

;-------------------------------------------------------
; common parameters for all environments [env:...]     |
;-------------------------------------------------------
[env]
;filter for source file directory when building
; see https://docs.platformio.org/en/stable/projectconf/sections/env/options/build/build_src_filter.html
build_src_filter = +<*> -<.git/> -<.svn/>

;general dependencies
; for version requirements see https://docs.platformio.org/en/stable/core/userguide/pkg/cmd_install.html#cmd-pkg-install-requirements
lib_deps = 
	adafruit/Adafruit SSD1306@~2.5.3
	lvgl@^8.3
    ; adding local library as dependency is necessary as it does not have any include files. This is because nothing should depend from this layer.
	3rd_party_adapters          ; this is necessary as no source code dependency shall exist to that packet
lib_ldf_mode = deep             ; to automatically detect nested dependencies (for external libraries)
build_flags = 
	-DLV_CONF_PATH="${PROJECT_DIR}/lib/3rd_party_adapters/LVGL/lv_conf.h" ; lvgl: use this config file
	-std=gnu++17                                                          ; necessary for using modern STL
	-Werror=return-type                                                   ; consider missing return information as fatal error
build_unflags = -std=gnu++11                                              ; necessary to be able to specify a different language standard
monitor_speed = 115200
monitor_filters = esp32_exception_decoder
build_type = debug

; Template section for tests to be run on native platform.
[test_native]
build_type = debug
platform = native
lib_deps =
	unity
	ArduinoFake
lib_ldf_mode = chain ; automatically detect dependencies but to not recurse into other components
build_flags =
	-Wno-deprecated ; Workaround for https://github.com/FabioBatSilva/ArduinoFake/pull/41#issuecomment-1440550553
	-D unitTesting
	-lgcov
	--coverage
	-fprofile-abs-path
	-std=gnu++17 ; necessary for using modern STL
	-O0 -ggdb3
build_unflags = -std=gnu++11    

;-------------------------------------------------------
; ESP32 build environment                              |
;-------------------------------------------------------
[env:esp32-s3-devkitc-1]
platform = espressif32
board = esp32-s3-devkitc-1
framework = arduino
;;add dependencies to general dependencies from [env]
; lib_deps = 
;   ${env.lib_deps}

; We have individual test enviroments, as this allows us to define different 
; include paths (lib_deps) per test.
; And this in turn allwos us to mock different parts of the software for each test.
[env:test_native_tasks]
extends = test_native
test_filter = test_tasks
lib_deps = 
	${test_native.lib_deps}
	utilities

[env:test_native_cli]
extends = test_native
test_filter = test_cli
debug_test = test_cli
lib_deps = 
	${test_native.lib_deps}

[env:test_native_string_helpers]
extends = test_native
test_filter = test_string_helpers
debug_test = test_string_helpers

[env:test_native_hmi]
extends = test_native
test_filter = test_hmi
lib_deps = 
	${test_native.lib_deps}
	application_business_rules
	board_adapters
