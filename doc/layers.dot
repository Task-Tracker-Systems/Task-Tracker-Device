digraph G {
  compound=true;
  node [shape="component"]
  newrank=true;
  rankdir="LR";
  concentrate=true;
  
  
  subgraph cluster_ebr {
      label = "enterprise business rules";
      rank="same";
      style="bold";
      ebr [shape=point style=invis];
      
      entities;
  }
  
  subgraph cluster_app {
      label = "application";
      rank="same";
      style="bold";
      app [shape=point style=invis];
      
      ob [label="<<interface>>\n output boundaries"]
      uc [label="use case interactors"]
      ib [label="<<interface>>\n input boundaries"]
  }
  
  
   subgraph clusterX_margin
   {
     style=invis
     margin=20.0
  
  subgraph cluster_thirdparty {
      label = "frameworks and libraries";
      rank="same";
      node [style="dotted"];
      style="bold,dotted";
      thirdparty[shape=point style=invis];
      
      sdk [label="software development kit"]
      driver;
      views;
  }
   }
  
  subgraph cluster_ia {
      label = "interface adapters";
      rank="same";
      style="bold";
      ia [shape=point style=invis];
      
      controllers, presenters;
      view_models [label="view models"];
      da [label="driver adapters"]
  };
      bi [label="board interfaces"]
  
  subgraph cluster_board {
      label = "board adapter";
      rank="same";
      style="bold";
      driver_interface [label="driver interfaces"]
      board [shape=point style=invis];
      board_impl [label="board implementatnion"]
      
  }
  
  n1 [label="Not part of\nthe project.", shape="note"]
  n1 -> thirdparty [lhead="cluster_thirdparty"];
  
  { 
      rank=same; 
      // ia, thirdparty;
  }
  
  {
      edge [arrowhead=onormal];
      board_impl -> bi;
      uc -> ib;
      presenters -> ob;
      da -> driver_interface;
  }
  
  {
      // dependencies
      edge [style="dashed", arrowhead="vee"];
      ia -> thirdparty [ltail="cluster_ia", lhead="cluster_thirdparty"];
      uc -> entities;
      ia -> app [ltail=cluster_ia, lhead=cluster_app];
      controllers -> ib;
      uc -> ob;
      da -> driver;
      presenters -> views;
      presenters -> view_models;
      presenters -> bi;
      board_impl -> driver_interface;
  } 
}

