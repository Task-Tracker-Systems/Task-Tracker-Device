<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.5"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Task Tracker: lib/enterprise_business_rules/serial_protocol/helper.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.jsdelivr.net/npm/mathjax@2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Task Tracker
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.5 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_97aefd0d527b934f1d99a682da8fe6a9.xhtml">lib</a></li><li class="navelem"><a class="el" href="dir_71046b38222792489c3876836d4fbdbc.xhtml">enterprise_business_rules</a></li><li class="navelem"><a class="el" href="dir_2b4ed0f0f8a947c7a7cb51e3d9d332b8.xhtml">serial_protocol</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle"><div class="title">helper.hpp</div></div>
</div><!--header-->
<div class="contents">
<a href="helper_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="comment">//  To parse this JSON data, first install</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="comment">//</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="comment">//      json.hpp  https://github.com/nlohmann/json</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="comment">//</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="comment">//  Then include this file, and then do</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="comment">//</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="comment">//     helper.hpp data = nlohmann::json::parse(jsonString);</span></div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span> </div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span> </div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="preprocessor">#include &lt;nlohmann/json.hpp&gt;</span></div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span> </div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="preprocessor">#include &lt;optional&gt;</span></div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="preprocessor">#include &lt;stdexcept&gt;</span></div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span><span class="preprocessor">#include &lt;regex&gt;</span></div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span> </div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span><span class="preprocessor">#include &lt;sstream&gt;</span></div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span> </div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span><span class="keyword">namespace </span><a class="code hl_namespace" href="namespacetasktrackersystems.xhtml">tasktrackersystems</a> {</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span>    <span class="keyword">using </span>nlohmann::json;</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span> </div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno"><a class="line" href="classtasktrackersystems_1_1classMemberConstraints.xhtml">   22</a></span>    <span class="keyword">class </span><a class="code hl_class" href="classtasktrackersystems_1_1classMemberConstraints.xhtml">classMemberConstraints</a> {</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>        <span class="keyword">private</span>:</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span>        std::optional&lt;int64_t&gt; min_int_value;</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>        std::optional&lt;int64_t&gt; max_int_value;</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>        std::optional&lt;double&gt; min_double_value;</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>        std::optional&lt;double&gt; max_double_value;</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>        std::optional&lt;size_t&gt; min_length;</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>        std::optional&lt;size_t&gt; max_length;</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span>        std::optional&lt;std::string&gt; pattern;</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span> </div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>        <span class="keyword">public</span>:</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno"><a class="line" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#ac0aba6805425e6329e34a3e121db6737">   33</a></span>        <a class="code hl_function" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#ac0aba6805425e6329e34a3e121db6737">classMemberConstraints</a>(</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>            std::optional&lt;int64_t&gt; min_int_value,</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>            std::optional&lt;int64_t&gt; max_int_value,</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>            std::optional&lt;double&gt; min_double_value,</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>            std::optional&lt;double&gt; max_double_value,</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>            std::optional&lt;size_t&gt; min_length,</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span>            std::optional&lt;size_t&gt; max_length,</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>            std::optional&lt;std::string&gt; pattern</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>        ) : min_int_value(min_int_value), max_int_value(max_int_value), min_double_value(min_double_value), max_double_value(max_double_value), min_length(min_length), max_length(max_length), pattern(pattern) {}</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno"><a class="line" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#ae024960c29310b96b776920a275e535f">   42</a></span>        <a class="code hl_function" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#ae024960c29310b96b776920a275e535f">classMemberConstraints</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno"><a class="line" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#a4aa92e4f7e22dd358e03f428b76c2ab6">   43</a></span>        <span class="keyword">virtual</span> <a class="code hl_function" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#a4aa92e4f7e22dd358e03f428b76c2ab6">~classMemberConstraints</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span> </div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno"><a class="line" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#afb99c074875936111dfc0a3f2fac3909">   45</a></span>        <span class="keywordtype">void</span> <a class="code hl_function" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#afb99c074875936111dfc0a3f2fac3909">set_min_int_value</a>(int64_t min_int_value) { this-&gt;min_int_value = min_int_value; }</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno"><a class="line" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#a9a47d0421da1da69bd91e4f324578716">   46</a></span>        <span class="keyword">auto</span> <a class="code hl_function" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#a9a47d0421da1da69bd91e4f324578716">get_min_int_value</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> min_int_value; }</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span> </div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno"><a class="line" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#a333340311802422c3f8cac46d6fa3e08">   48</a></span>        <span class="keywordtype">void</span> <a class="code hl_function" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#a333340311802422c3f8cac46d6fa3e08">set_max_int_value</a>(int64_t max_int_value) { this-&gt;max_int_value = max_int_value; }</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno"><a class="line" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#ae85ac0f6586dbbcf408338c58908710b">   49</a></span>        <span class="keyword">auto</span> <a class="code hl_function" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#ae85ac0f6586dbbcf408338c58908710b">get_max_int_value</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> max_int_value; }</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span> </div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno"><a class="line" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#ab66faecc88fff3a72d4d0eff44dcc990">   51</a></span>        <span class="keywordtype">void</span> <a class="code hl_function" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#ab66faecc88fff3a72d4d0eff44dcc990">set_min_double_value</a>(<span class="keywordtype">double</span> min_double_value) { this-&gt;min_double_value = min_double_value; }</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno"><a class="line" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#ac0b6b79d6a22d72e4655c5f8ff008657">   52</a></span>        <span class="keyword">auto</span> <a class="code hl_function" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#ac0b6b79d6a22d72e4655c5f8ff008657">get_min_double_value</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> min_double_value; }</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span> </div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno"><a class="line" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#a8d62dde8a208a30822ae8179fb42efcf">   54</a></span>        <span class="keywordtype">void</span> <a class="code hl_function" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#a8d62dde8a208a30822ae8179fb42efcf">set_max_double_value</a>(<span class="keywordtype">double</span> max_double_value) { this-&gt;max_double_value = max_double_value; }</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno"><a class="line" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#afe180c41987c9d86f0dc508438a8ae90">   55</a></span>        <span class="keyword">auto</span> <a class="code hl_function" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#afe180c41987c9d86f0dc508438a8ae90">get_max_double_value</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> max_double_value; }</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span> </div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno"><a class="line" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#ae635903cfc372b4425851b56eeda0670">   57</a></span>        <span class="keywordtype">void</span> <a class="code hl_function" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#ae635903cfc372b4425851b56eeda0670">set_min_length</a>(<span class="keywordtype">size_t</span> min_length) { this-&gt;min_length = min_length; }</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno"><a class="line" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#aa0c5f99c25745ccc47636ee560d33f13">   58</a></span>        <span class="keyword">auto</span> <a class="code hl_function" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#aa0c5f99c25745ccc47636ee560d33f13">get_min_length</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> min_length; }</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span> </div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno"><a class="line" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#a3759c6c6e48d3afa305e9589aba9d29c">   60</a></span>        <span class="keywordtype">void</span> <a class="code hl_function" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#a3759c6c6e48d3afa305e9589aba9d29c">set_max_length</a>(<span class="keywordtype">size_t</span> max_length) { this-&gt;max_length = max_length; }</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno"><a class="line" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#ad8da99252cda6e06392615240c9dd9dc">   61</a></span>        <span class="keyword">auto</span> <a class="code hl_function" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#ad8da99252cda6e06392615240c9dd9dc">get_max_length</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> max_length; }</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span> </div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno"><a class="line" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#a28fa38527120ad4b1362a9db54057dd3">   63</a></span>        <span class="keywordtype">void</span> <a class="code hl_function" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#a28fa38527120ad4b1362a9db54057dd3">set_pattern</a>(<span class="keyword">const</span> std::string &amp;  pattern) { this-&gt;pattern = pattern; }</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno"><a class="line" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#a79d2567d75bd23de9bccb4b6c33cc9b7">   64</a></span>        <span class="keyword">auto</span> <a class="code hl_function" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#a79d2567d75bd23de9bccb4b6c33cc9b7">get_pattern</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> pattern; }</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>    };</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span> </div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno"><a class="line" href="classtasktrackersystems_1_1classMemberConstraintException.xhtml">   67</a></span>    <span class="keyword">class </span><a class="code hl_class" href="classtasktrackersystems_1_1classMemberConstraintException.xhtml">classMemberConstraintException</a> : <span class="keyword">public</span> std::runtime_error {</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>        <span class="keyword">public</span>:</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno"><a class="line" href="classtasktrackersystems_1_1classMemberConstraintException.xhtml#a0c44671ae1a4b16c65921fa7686def63">   69</a></span>        <a class="code hl_function" href="classtasktrackersystems_1_1classMemberConstraintException.xhtml#a0c44671ae1a4b16c65921fa7686def63">classMemberConstraintException</a>(<span class="keyword">const</span> std::string &amp;  msg) : std::runtime_error(msg) {}</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>    };</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span> </div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno"><a class="line" href="classtasktrackersystems_1_1valueTooLowException.xhtml">   72</a></span>    <span class="keyword">class </span><a class="code hl_class" href="classtasktrackersystems_1_1valueTooLowException.xhtml">valueTooLowException</a> : <span class="keyword">public</span> <a class="code hl_class" href="classtasktrackersystems_1_1classMemberConstraintException.xhtml">classMemberConstraintException</a> {</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>        <span class="keyword">public</span>:</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno"><a class="line" href="classtasktrackersystems_1_1valueTooLowException.xhtml#ae5bfa1dc6e2ca01df1d87f3df35e951c">   74</a></span>        <a class="code hl_function" href="classtasktrackersystems_1_1valueTooLowException.xhtml#ae5bfa1dc6e2ca01df1d87f3df35e951c">valueTooLowException</a>(<span class="keyword">const</span> std::string &amp;  msg) : <a class="code hl_class" href="classtasktrackersystems_1_1classMemberConstraintException.xhtml">classMemberConstraintException</a>(msg) {}</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>    };</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span> </div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno"><a class="line" href="classtasktrackersystems_1_1valueTooHighException.xhtml">   77</a></span>    <span class="keyword">class </span><a class="code hl_class" href="classtasktrackersystems_1_1valueTooHighException.xhtml">valueTooHighException</a> : <span class="keyword">public</span> <a class="code hl_class" href="classtasktrackersystems_1_1classMemberConstraintException.xhtml">classMemberConstraintException</a> {</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>        <span class="keyword">public</span>:</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno"><a class="line" href="classtasktrackersystems_1_1valueTooHighException.xhtml#aea89a4932ebbac045cf46788e784e33a">   79</a></span>        <a class="code hl_function" href="classtasktrackersystems_1_1valueTooHighException.xhtml#aea89a4932ebbac045cf46788e784e33a">valueTooHighException</a>(<span class="keyword">const</span> std::string &amp;  msg) : <a class="code hl_class" href="classtasktrackersystems_1_1classMemberConstraintException.xhtml">classMemberConstraintException</a>(msg) {}</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>    };</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span> </div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno"><a class="line" href="classtasktrackersystems_1_1valueTooShortException.xhtml">   82</a></span>    <span class="keyword">class </span><a class="code hl_class" href="classtasktrackersystems_1_1valueTooShortException.xhtml">valueTooShortException</a> : <span class="keyword">public</span> <a class="code hl_class" href="classtasktrackersystems_1_1classMemberConstraintException.xhtml">classMemberConstraintException</a> {</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>        <span class="keyword">public</span>:</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno"><a class="line" href="classtasktrackersystems_1_1valueTooShortException.xhtml#a71082ca9138481beb47bb836c19907cd">   84</a></span>        <a class="code hl_function" href="classtasktrackersystems_1_1valueTooShortException.xhtml#a71082ca9138481beb47bb836c19907cd">valueTooShortException</a>(<span class="keyword">const</span> std::string &amp;  msg) : <a class="code hl_class" href="classtasktrackersystems_1_1classMemberConstraintException.xhtml">classMemberConstraintException</a>(msg) {}</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>    };</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span> </div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno"><a class="line" href="classtasktrackersystems_1_1valueTooLongException.xhtml">   87</a></span>    <span class="keyword">class </span><a class="code hl_class" href="classtasktrackersystems_1_1valueTooLongException.xhtml">valueTooLongException</a> : <span class="keyword">public</span> <a class="code hl_class" href="classtasktrackersystems_1_1classMemberConstraintException.xhtml">classMemberConstraintException</a> {</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>        <span class="keyword">public</span>:</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno"><a class="line" href="classtasktrackersystems_1_1valueTooLongException.xhtml#aaaf92c9daf7762e8205c760d8f661698">   89</a></span>        <a class="code hl_function" href="classtasktrackersystems_1_1valueTooLongException.xhtml#aaaf92c9daf7762e8205c760d8f661698">valueTooLongException</a>(<span class="keyword">const</span> std::string &amp;  msg) : <a class="code hl_class" href="classtasktrackersystems_1_1classMemberConstraintException.xhtml">classMemberConstraintException</a>(msg) {}</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>    };</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span> </div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno"><a class="line" href="classtasktrackersystems_1_1invalidPatternException.xhtml">   92</a></span>    <span class="keyword">class </span><a class="code hl_class" href="classtasktrackersystems_1_1invalidPatternException.xhtml">invalidPatternException</a> : <span class="keyword">public</span> <a class="code hl_class" href="classtasktrackersystems_1_1classMemberConstraintException.xhtml">classMemberConstraintException</a> {</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>        <span class="keyword">public</span>:</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno"><a class="line" href="classtasktrackersystems_1_1invalidPatternException.xhtml#a6c538d07faa75ae8d7b6fe7ecd592d5a">   94</a></span>        <a class="code hl_function" href="classtasktrackersystems_1_1invalidPatternException.xhtml#a6c538d07faa75ae8d7b6fe7ecd592d5a">invalidPatternException</a>(<span class="keyword">const</span> std::string &amp;  msg) : <a class="code hl_class" href="classtasktrackersystems_1_1classMemberConstraintException.xhtml">classMemberConstraintException</a>(msg) {}</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>    };</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span> </div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno"><a class="line" href="namespacetasktrackersystems.xhtml#a19ccc6db12625870d6cb2d6de58cf449">   97</a></span>    <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code hl_function" href="namespacetasktrackersystems.xhtml#a19ccc6db12625870d6cb2d6de58cf449">checkConstraint</a>(<span class="keyword">const</span> std::string &amp;  name, <span class="keyword">const</span> <a class="code hl_class" href="classtasktrackersystems_1_1classMemberConstraints.xhtml">classMemberConstraints</a> &amp; c, int64_t value) {</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span>        <span class="keywordflow">if</span> (c.<a class="code hl_function" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#a9a47d0421da1da69bd91e4f324578716">get_min_int_value</a>() != std::nullopt &amp;&amp; value &lt; *c.<a class="code hl_function" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#a9a47d0421da1da69bd91e4f324578716">get_min_int_value</a>()) {</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>            <span class="keywordflow">throw</span> <a class="code hl_class" href="classtasktrackersystems_1_1valueTooLowException.xhtml">valueTooLowException</a> (<span class="stringliteral">&quot;Value too low for &quot;</span> + name + <span class="stringliteral">&quot; (&quot;</span> + std::to_string(value) + <span class="stringliteral">&quot;&lt;&quot;</span> + std::to_string(*c.<a class="code hl_function" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#a9a47d0421da1da69bd91e4f324578716">get_min_int_value</a>()) + <span class="stringliteral">&quot;)&quot;</span>);</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>        }</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span> </div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>        <span class="keywordflow">if</span> (c.<a class="code hl_function" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#ae85ac0f6586dbbcf408338c58908710b">get_max_int_value</a>() != std::nullopt &amp;&amp; value &gt; *c.<a class="code hl_function" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#ae85ac0f6586dbbcf408338c58908710b">get_max_int_value</a>()) {</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>            <span class="keywordflow">throw</span> <a class="code hl_class" href="classtasktrackersystems_1_1valueTooHighException.xhtml">valueTooHighException</a> (<span class="stringliteral">&quot;Value too high for &quot;</span> + name + <span class="stringliteral">&quot; (&quot;</span> + std::to_string(value) + <span class="stringliteral">&quot;&gt;&quot;</span> + std::to_string(*c.<a class="code hl_function" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#ae85ac0f6586dbbcf408338c58908710b">get_max_int_value</a>()) + <span class="stringliteral">&quot;)&quot;</span>);</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>        }</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>    }</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span> </div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno"><a class="line" href="namespacetasktrackersystems.xhtml#a82df4dfc14c96c90308e832b59a5570c">  107</a></span>    <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code hl_function" href="namespacetasktrackersystems.xhtml#a19ccc6db12625870d6cb2d6de58cf449">checkConstraint</a>(<span class="keyword">const</span> std::string &amp;  name, <span class="keyword">const</span> <a class="code hl_class" href="classtasktrackersystems_1_1classMemberConstraints.xhtml">classMemberConstraints</a> &amp; c, <span class="keywordtype">double</span> value) {</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>        <span class="keywordflow">if</span> (c.<a class="code hl_function" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#ac0b6b79d6a22d72e4655c5f8ff008657">get_min_double_value</a>() != std::nullopt &amp;&amp; value &lt; *c.<a class="code hl_function" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#ac0b6b79d6a22d72e4655c5f8ff008657">get_min_double_value</a>()) {</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>            <span class="keywordflow">throw</span> <a class="code hl_class" href="classtasktrackersystems_1_1valueTooLowException.xhtml">valueTooLowException</a> (<span class="stringliteral">&quot;Value too low for &quot;</span> + name + <span class="stringliteral">&quot; (&quot;</span> + std::to_string(value) + <span class="stringliteral">&quot;&lt;&quot;</span> + std::to_string(*c.<a class="code hl_function" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#ac0b6b79d6a22d72e4655c5f8ff008657">get_min_double_value</a>()) + <span class="stringliteral">&quot;)&quot;</span>);</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>        }</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span> </div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>        <span class="keywordflow">if</span> (c.<a class="code hl_function" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#afe180c41987c9d86f0dc508438a8ae90">get_max_double_value</a>() != std::nullopt &amp;&amp; value &gt; *c.<a class="code hl_function" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#afe180c41987c9d86f0dc508438a8ae90">get_max_double_value</a>()) {</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>            <span class="keywordflow">throw</span> <a class="code hl_class" href="classtasktrackersystems_1_1valueTooHighException.xhtml">valueTooHighException</a> (<span class="stringliteral">&quot;Value too high for &quot;</span> + name + <span class="stringliteral">&quot; (&quot;</span> + std::to_string(value) + <span class="stringliteral">&quot;&gt;&quot;</span> + std::to_string(*c.<a class="code hl_function" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#afe180c41987c9d86f0dc508438a8ae90">get_max_double_value</a>()) + <span class="stringliteral">&quot;)&quot;</span>);</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>        }</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span>    }</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span> </div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno"><a class="line" href="namespacetasktrackersystems.xhtml#af8f60e4a2e709324f203136080f371c9">  117</a></span>    <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code hl_function" href="namespacetasktrackersystems.xhtml#a19ccc6db12625870d6cb2d6de58cf449">checkConstraint</a>(<span class="keyword">const</span> std::string &amp;  name, <span class="keyword">const</span> <a class="code hl_class" href="classtasktrackersystems_1_1classMemberConstraints.xhtml">classMemberConstraints</a> &amp; c, <span class="keyword">const</span> std::string &amp;  value) {</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>        <span class="keywordflow">if</span> (c.<a class="code hl_function" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#aa0c5f99c25745ccc47636ee560d33f13">get_min_length</a>() != std::nullopt &amp;&amp; value.length() &lt; *c.<a class="code hl_function" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#aa0c5f99c25745ccc47636ee560d33f13">get_min_length</a>()) {</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>            <span class="keywordflow">throw</span> <a class="code hl_class" href="classtasktrackersystems_1_1valueTooShortException.xhtml">valueTooShortException</a> (<span class="stringliteral">&quot;Value too short for &quot;</span> + name + <span class="stringliteral">&quot; (&quot;</span> + std::to_string(value.length()) + <span class="stringliteral">&quot;&lt;&quot;</span> + std::to_string(*c.<a class="code hl_function" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#aa0c5f99c25745ccc47636ee560d33f13">get_min_length</a>()) + <span class="stringliteral">&quot;)&quot;</span>);</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>        }</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span> </div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>        <span class="keywordflow">if</span> (c.<a class="code hl_function" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#ad8da99252cda6e06392615240c9dd9dc">get_max_length</a>() != std::nullopt &amp;&amp; value.length() &gt; *c.<a class="code hl_function" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#ad8da99252cda6e06392615240c9dd9dc">get_max_length</a>()) {</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>            <span class="keywordflow">throw</span> <a class="code hl_class" href="classtasktrackersystems_1_1valueTooLongException.xhtml">valueTooLongException</a> (<span class="stringliteral">&quot;Value too long for &quot;</span> + name + <span class="stringliteral">&quot; (&quot;</span> + std::to_string(value.length()) + <span class="stringliteral">&quot;&gt;&quot;</span> + std::to_string(*c.<a class="code hl_function" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#ad8da99252cda6e06392615240c9dd9dc">get_max_length</a>()) + <span class="stringliteral">&quot;)&quot;</span>);</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>        }</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span> </div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>        <span class="keywordflow">if</span> (c.<a class="code hl_function" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#a79d2567d75bd23de9bccb4b6c33cc9b7">get_pattern</a>() != std::nullopt) {</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>            std::smatch result;</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>            std::regex_search(value, result, std::regex( *c.<a class="code hl_function" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#a79d2567d75bd23de9bccb4b6c33cc9b7">get_pattern</a>() ));</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>            <span class="keywordflow">if</span> (result.empty()) {</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>                <span class="keywordflow">throw</span> <a class="code hl_class" href="classtasktrackersystems_1_1invalidPatternException.xhtml">invalidPatternException</a> (<span class="stringliteral">&quot;Value doesn&#39;t match pattern for &quot;</span> + name + <span class="stringliteral">&quot; (&quot;</span> + value +<span class="stringliteral">&quot; != &quot;</span> + *c.<a class="code hl_function" href="classtasktrackersystems_1_1classMemberConstraints.xhtml#a79d2567d75bd23de9bccb4b6c33cc9b7">get_pattern</a>() + <span class="stringliteral">&quot;)&quot;</span>);</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>            }</div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span>        }</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span>    }</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span> </div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span><span class="preprocessor">    #ifndef NLOHMANN_UNTYPED_tasktrackersystems_HELPER</span></div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno"><a class="line" href="helper_8hpp.xhtml#afe99f4960be05b00591061000a3778b6">  136</a></span><span class="preprocessor">    #define NLOHMANN_UNTYPED_tasktrackersystems_HELPER</span></div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno"><a class="line" href="namespacetasktrackersystems.xhtml#a4e2f70869108d933383cf1027216d632">  137</a></span>    <span class="keyword">inline</span> json <a class="code hl_function" href="namespacetasktrackersystems.xhtml#a4e2f70869108d933383cf1027216d632">get_untyped</a>(<span class="keyword">const</span> json &amp; j, <span class="keyword">const</span> <span class="keywordtype">char</span> * property) {</div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span>        <span class="keywordflow">if</span> (j.find(property) != j.end()) {</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>            <span class="keywordflow">return</span> j.at(property).get&lt;json&gt;();</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>        }</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>        <span class="keywordflow">return</span> json();</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>    }</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span> </div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno"><a class="line" href="namespacetasktrackersystems.xhtml#a574eb139f97c5128aa3ca752b173540e">  144</a></span>    <span class="keyword">inline</span> json <a class="code hl_function" href="namespacetasktrackersystems.xhtml#a4e2f70869108d933383cf1027216d632">get_untyped</a>(<span class="keyword">const</span> json &amp; j, std::string property) {</div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span>        <span class="keywordflow">return</span> <a class="code hl_function" href="namespacetasktrackersystems.xhtml#a4e2f70869108d933383cf1027216d632">get_untyped</a>(j, property.data());</div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>    }</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span><span class="preprocessor">    #endif</span></div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>}</div>
<div class="ttc" id="aclasstasktrackersystems_1_1classMemberConstraintException_xhtml"><div class="ttname"><a href="classtasktrackersystems_1_1classMemberConstraintException.xhtml">tasktrackersystems::classMemberConstraintException</a></div><div class="ttdef"><b>Definition:</b> helper.hpp:67</div></div>
<div class="ttc" id="aclasstasktrackersystems_1_1classMemberConstraintException_xhtml_a0c44671ae1a4b16c65921fa7686def63"><div class="ttname"><a href="classtasktrackersystems_1_1classMemberConstraintException.xhtml#a0c44671ae1a4b16c65921fa7686def63">tasktrackersystems::classMemberConstraintException::classMemberConstraintException</a></div><div class="ttdeci">classMemberConstraintException(const std::string &amp;msg)</div><div class="ttdef"><b>Definition:</b> helper.hpp:69</div></div>
<div class="ttc" id="aclasstasktrackersystems_1_1classMemberConstraints_xhtml"><div class="ttname"><a href="classtasktrackersystems_1_1classMemberConstraints.xhtml">tasktrackersystems::classMemberConstraints</a></div><div class="ttdef"><b>Definition:</b> helper.hpp:22</div></div>
<div class="ttc" id="aclasstasktrackersystems_1_1classMemberConstraints_xhtml_a28fa38527120ad4b1362a9db54057dd3"><div class="ttname"><a href="classtasktrackersystems_1_1classMemberConstraints.xhtml#a28fa38527120ad4b1362a9db54057dd3">tasktrackersystems::classMemberConstraints::set_pattern</a></div><div class="ttdeci">void set_pattern(const std::string &amp;pattern)</div><div class="ttdef"><b>Definition:</b> helper.hpp:63</div></div>
<div class="ttc" id="aclasstasktrackersystems_1_1classMemberConstraints_xhtml_a333340311802422c3f8cac46d6fa3e08"><div class="ttname"><a href="classtasktrackersystems_1_1classMemberConstraints.xhtml#a333340311802422c3f8cac46d6fa3e08">tasktrackersystems::classMemberConstraints::set_max_int_value</a></div><div class="ttdeci">void set_max_int_value(int64_t max_int_value)</div><div class="ttdef"><b>Definition:</b> helper.hpp:48</div></div>
<div class="ttc" id="aclasstasktrackersystems_1_1classMemberConstraints_xhtml_a3759c6c6e48d3afa305e9589aba9d29c"><div class="ttname"><a href="classtasktrackersystems_1_1classMemberConstraints.xhtml#a3759c6c6e48d3afa305e9589aba9d29c">tasktrackersystems::classMemberConstraints::set_max_length</a></div><div class="ttdeci">void set_max_length(size_t max_length)</div><div class="ttdef"><b>Definition:</b> helper.hpp:60</div></div>
<div class="ttc" id="aclasstasktrackersystems_1_1classMemberConstraints_xhtml_a4aa92e4f7e22dd358e03f428b76c2ab6"><div class="ttname"><a href="classtasktrackersystems_1_1classMemberConstraints.xhtml#a4aa92e4f7e22dd358e03f428b76c2ab6">tasktrackersystems::classMemberConstraints::~classMemberConstraints</a></div><div class="ttdeci">virtual ~classMemberConstraints()=default</div></div>
<div class="ttc" id="aclasstasktrackersystems_1_1classMemberConstraints_xhtml_a79d2567d75bd23de9bccb4b6c33cc9b7"><div class="ttname"><a href="classtasktrackersystems_1_1classMemberConstraints.xhtml#a79d2567d75bd23de9bccb4b6c33cc9b7">tasktrackersystems::classMemberConstraints::get_pattern</a></div><div class="ttdeci">auto get_pattern() const</div><div class="ttdef"><b>Definition:</b> helper.hpp:64</div></div>
<div class="ttc" id="aclasstasktrackersystems_1_1classMemberConstraints_xhtml_a8d62dde8a208a30822ae8179fb42efcf"><div class="ttname"><a href="classtasktrackersystems_1_1classMemberConstraints.xhtml#a8d62dde8a208a30822ae8179fb42efcf">tasktrackersystems::classMemberConstraints::set_max_double_value</a></div><div class="ttdeci">void set_max_double_value(double max_double_value)</div><div class="ttdef"><b>Definition:</b> helper.hpp:54</div></div>
<div class="ttc" id="aclasstasktrackersystems_1_1classMemberConstraints_xhtml_a9a47d0421da1da69bd91e4f324578716"><div class="ttname"><a href="classtasktrackersystems_1_1classMemberConstraints.xhtml#a9a47d0421da1da69bd91e4f324578716">tasktrackersystems::classMemberConstraints::get_min_int_value</a></div><div class="ttdeci">auto get_min_int_value() const</div><div class="ttdef"><b>Definition:</b> helper.hpp:46</div></div>
<div class="ttc" id="aclasstasktrackersystems_1_1classMemberConstraints_xhtml_aa0c5f99c25745ccc47636ee560d33f13"><div class="ttname"><a href="classtasktrackersystems_1_1classMemberConstraints.xhtml#aa0c5f99c25745ccc47636ee560d33f13">tasktrackersystems::classMemberConstraints::get_min_length</a></div><div class="ttdeci">auto get_min_length() const</div><div class="ttdef"><b>Definition:</b> helper.hpp:58</div></div>
<div class="ttc" id="aclasstasktrackersystems_1_1classMemberConstraints_xhtml_ab66faecc88fff3a72d4d0eff44dcc990"><div class="ttname"><a href="classtasktrackersystems_1_1classMemberConstraints.xhtml#ab66faecc88fff3a72d4d0eff44dcc990">tasktrackersystems::classMemberConstraints::set_min_double_value</a></div><div class="ttdeci">void set_min_double_value(double min_double_value)</div><div class="ttdef"><b>Definition:</b> helper.hpp:51</div></div>
<div class="ttc" id="aclasstasktrackersystems_1_1classMemberConstraints_xhtml_ac0aba6805425e6329e34a3e121db6737"><div class="ttname"><a href="classtasktrackersystems_1_1classMemberConstraints.xhtml#ac0aba6805425e6329e34a3e121db6737">tasktrackersystems::classMemberConstraints::classMemberConstraints</a></div><div class="ttdeci">classMemberConstraints(std::optional&lt; int64_t &gt; min_int_value, std::optional&lt; int64_t &gt; max_int_value, std::optional&lt; double &gt; min_double_value, std::optional&lt; double &gt; max_double_value, std::optional&lt; size_t &gt; min_length, std::optional&lt; size_t &gt; max_length, std::optional&lt; std::string &gt; pattern)</div><div class="ttdef"><b>Definition:</b> helper.hpp:33</div></div>
<div class="ttc" id="aclasstasktrackersystems_1_1classMemberConstraints_xhtml_ac0b6b79d6a22d72e4655c5f8ff008657"><div class="ttname"><a href="classtasktrackersystems_1_1classMemberConstraints.xhtml#ac0b6b79d6a22d72e4655c5f8ff008657">tasktrackersystems::classMemberConstraints::get_min_double_value</a></div><div class="ttdeci">auto get_min_double_value() const</div><div class="ttdef"><b>Definition:</b> helper.hpp:52</div></div>
<div class="ttc" id="aclasstasktrackersystems_1_1classMemberConstraints_xhtml_ad8da99252cda6e06392615240c9dd9dc"><div class="ttname"><a href="classtasktrackersystems_1_1classMemberConstraints.xhtml#ad8da99252cda6e06392615240c9dd9dc">tasktrackersystems::classMemberConstraints::get_max_length</a></div><div class="ttdeci">auto get_max_length() const</div><div class="ttdef"><b>Definition:</b> helper.hpp:61</div></div>
<div class="ttc" id="aclasstasktrackersystems_1_1classMemberConstraints_xhtml_ae024960c29310b96b776920a275e535f"><div class="ttname"><a href="classtasktrackersystems_1_1classMemberConstraints.xhtml#ae024960c29310b96b776920a275e535f">tasktrackersystems::classMemberConstraints::classMemberConstraints</a></div><div class="ttdeci">classMemberConstraints()=default</div></div>
<div class="ttc" id="aclasstasktrackersystems_1_1classMemberConstraints_xhtml_ae635903cfc372b4425851b56eeda0670"><div class="ttname"><a href="classtasktrackersystems_1_1classMemberConstraints.xhtml#ae635903cfc372b4425851b56eeda0670">tasktrackersystems::classMemberConstraints::set_min_length</a></div><div class="ttdeci">void set_min_length(size_t min_length)</div><div class="ttdef"><b>Definition:</b> helper.hpp:57</div></div>
<div class="ttc" id="aclasstasktrackersystems_1_1classMemberConstraints_xhtml_ae85ac0f6586dbbcf408338c58908710b"><div class="ttname"><a href="classtasktrackersystems_1_1classMemberConstraints.xhtml#ae85ac0f6586dbbcf408338c58908710b">tasktrackersystems::classMemberConstraints::get_max_int_value</a></div><div class="ttdeci">auto get_max_int_value() const</div><div class="ttdef"><b>Definition:</b> helper.hpp:49</div></div>
<div class="ttc" id="aclasstasktrackersystems_1_1classMemberConstraints_xhtml_afb99c074875936111dfc0a3f2fac3909"><div class="ttname"><a href="classtasktrackersystems_1_1classMemberConstraints.xhtml#afb99c074875936111dfc0a3f2fac3909">tasktrackersystems::classMemberConstraints::set_min_int_value</a></div><div class="ttdeci">void set_min_int_value(int64_t min_int_value)</div><div class="ttdef"><b>Definition:</b> helper.hpp:45</div></div>
<div class="ttc" id="aclasstasktrackersystems_1_1classMemberConstraints_xhtml_afe180c41987c9d86f0dc508438a8ae90"><div class="ttname"><a href="classtasktrackersystems_1_1classMemberConstraints.xhtml#afe180c41987c9d86f0dc508438a8ae90">tasktrackersystems::classMemberConstraints::get_max_double_value</a></div><div class="ttdeci">auto get_max_double_value() const</div><div class="ttdef"><b>Definition:</b> helper.hpp:55</div></div>
<div class="ttc" id="aclasstasktrackersystems_1_1invalidPatternException_xhtml"><div class="ttname"><a href="classtasktrackersystems_1_1invalidPatternException.xhtml">tasktrackersystems::invalidPatternException</a></div><div class="ttdef"><b>Definition:</b> helper.hpp:92</div></div>
<div class="ttc" id="aclasstasktrackersystems_1_1invalidPatternException_xhtml_a6c538d07faa75ae8d7b6fe7ecd592d5a"><div class="ttname"><a href="classtasktrackersystems_1_1invalidPatternException.xhtml#a6c538d07faa75ae8d7b6fe7ecd592d5a">tasktrackersystems::invalidPatternException::invalidPatternException</a></div><div class="ttdeci">invalidPatternException(const std::string &amp;msg)</div><div class="ttdef"><b>Definition:</b> helper.hpp:94</div></div>
<div class="ttc" id="aclasstasktrackersystems_1_1valueTooHighException_xhtml"><div class="ttname"><a href="classtasktrackersystems_1_1valueTooHighException.xhtml">tasktrackersystems::valueTooHighException</a></div><div class="ttdef"><b>Definition:</b> helper.hpp:77</div></div>
<div class="ttc" id="aclasstasktrackersystems_1_1valueTooHighException_xhtml_aea89a4932ebbac045cf46788e784e33a"><div class="ttname"><a href="classtasktrackersystems_1_1valueTooHighException.xhtml#aea89a4932ebbac045cf46788e784e33a">tasktrackersystems::valueTooHighException::valueTooHighException</a></div><div class="ttdeci">valueTooHighException(const std::string &amp;msg)</div><div class="ttdef"><b>Definition:</b> helper.hpp:79</div></div>
<div class="ttc" id="aclasstasktrackersystems_1_1valueTooLongException_xhtml"><div class="ttname"><a href="classtasktrackersystems_1_1valueTooLongException.xhtml">tasktrackersystems::valueTooLongException</a></div><div class="ttdef"><b>Definition:</b> helper.hpp:87</div></div>
<div class="ttc" id="aclasstasktrackersystems_1_1valueTooLongException_xhtml_aaaf92c9daf7762e8205c760d8f661698"><div class="ttname"><a href="classtasktrackersystems_1_1valueTooLongException.xhtml#aaaf92c9daf7762e8205c760d8f661698">tasktrackersystems::valueTooLongException::valueTooLongException</a></div><div class="ttdeci">valueTooLongException(const std::string &amp;msg)</div><div class="ttdef"><b>Definition:</b> helper.hpp:89</div></div>
<div class="ttc" id="aclasstasktrackersystems_1_1valueTooLowException_xhtml"><div class="ttname"><a href="classtasktrackersystems_1_1valueTooLowException.xhtml">tasktrackersystems::valueTooLowException</a></div><div class="ttdef"><b>Definition:</b> helper.hpp:72</div></div>
<div class="ttc" id="aclasstasktrackersystems_1_1valueTooLowException_xhtml_ae5bfa1dc6e2ca01df1d87f3df35e951c"><div class="ttname"><a href="classtasktrackersystems_1_1valueTooLowException.xhtml#ae5bfa1dc6e2ca01df1d87f3df35e951c">tasktrackersystems::valueTooLowException::valueTooLowException</a></div><div class="ttdeci">valueTooLowException(const std::string &amp;msg)</div><div class="ttdef"><b>Definition:</b> helper.hpp:74</div></div>
<div class="ttc" id="aclasstasktrackersystems_1_1valueTooShortException_xhtml"><div class="ttname"><a href="classtasktrackersystems_1_1valueTooShortException.xhtml">tasktrackersystems::valueTooShortException</a></div><div class="ttdef"><b>Definition:</b> helper.hpp:82</div></div>
<div class="ttc" id="aclasstasktrackersystems_1_1valueTooShortException_xhtml_a71082ca9138481beb47bb836c19907cd"><div class="ttname"><a href="classtasktrackersystems_1_1valueTooShortException.xhtml#a71082ca9138481beb47bb836c19907cd">tasktrackersystems::valueTooShortException::valueTooShortException</a></div><div class="ttdeci">valueTooShortException(const std::string &amp;msg)</div><div class="ttdef"><b>Definition:</b> helper.hpp:84</div></div>
<div class="ttc" id="anamespacetasktrackersystems_xhtml"><div class="ttname"><a href="namespacetasktrackersystems.xhtml">tasktrackersystems</a></div><div class="ttdef"><b>Definition:</b> Generators.hpp:16</div></div>
<div class="ttc" id="anamespacetasktrackersystems_xhtml_a19ccc6db12625870d6cb2d6de58cf449"><div class="ttname"><a href="namespacetasktrackersystems.xhtml#a19ccc6db12625870d6cb2d6de58cf449">tasktrackersystems::checkConstraint</a></div><div class="ttdeci">void checkConstraint(const std::string &amp;name, const classMemberConstraints &amp;c, int64_t value)</div><div class="ttdef"><b>Definition:</b> helper.hpp:97</div></div>
<div class="ttc" id="anamespacetasktrackersystems_xhtml_a4e2f70869108d933383cf1027216d632"><div class="ttname"><a href="namespacetasktrackersystems.xhtml#a4e2f70869108d933383cf1027216d632">tasktrackersystems::get_untyped</a></div><div class="ttdeci">json get_untyped(const json &amp;j, const char *property)</div><div class="ttdef"><b>Definition:</b> helper.hpp:137</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Fri Feb 23 2024 18:19:17 for Task Tracker by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.5
</small></address>
</body>
</html>
