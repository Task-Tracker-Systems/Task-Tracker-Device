<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.5"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Task Tracker: command_line_interpreter::Option&lt; T, CharType &gt; Struct Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.jsdelivr.net/npm/mathjax@2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Task Tracker
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.5 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacecommand__line__interpreter.xhtml">command_line_interpreter</a></li><li class="navelem"><a class="el" href="structcommand__line__interpreter_1_1Option.xhtml">Option</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="structcommand__line__interpreter_1_1Option-members.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">command_line_interpreter::Option&lt; T, CharType &gt; Struct Template Reference</div></div>
</div><!--header-->
<div class="contents">

<p>Extracts data from string options.  
 <a href="structcommand__line__interpreter_1_1Option.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="command__line__interpreter_8hpp_source.xhtml">command_line_interpreter.hpp</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for command_line_interpreter::Option&lt; T, CharType &gt;:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="structcommand__line__interpreter_1_1Option__coll__graph.svg" width="279" height="198"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a781b86871f6516c547bde462f538ce2b"><td class="memItemLeft" align="right" valign="top">typedef CharType&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structcommand__line__interpreter_1_1Option.xhtml#a781b86871f6516c547bde462f538ce2b">CharT</a></td></tr>
<tr class="separator:a781b86871f6516c547bde462f538ce2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae66a42a72e328312c048ce953d020bd6"><td class="memItemLeft" align="right" valign="top">typedef T&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structcommand__line__interpreter_1_1Option.xhtml#ae66a42a72e328312c048ce953d020bd6">ArgumentType</a></td></tr>
<tr class="separator:ae66a42a72e328312c048ce953d020bd6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ae1858de91ff7e5d3c9b7fd1fe0e92f19"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structcommand__line__interpreter_1_1Option.xhtml#ae1858de91ff7e5d3c9b7fd1fe0e92f19">doesMatchName</a> (const <a class="el" href="structcommand__line__interpreter_1_1Option.xhtml#a781b86871f6516c547bde462f538ce2b">CharT</a> *const optionName) const</td></tr>
<tr class="memdesc:ae1858de91ff7e5d3c9b7fd1fe0e92f19"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if the name matches one of the labels valid for this option.  <a href="structcommand__line__interpreter_1_1Option.xhtml#ae1858de91ff7e5d3c9b7fd1fe0e92f19">More...</a><br /></td></tr>
<tr class="separator:ae1858de91ff7e5d3c9b7fd1fe0e92f19"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d822e6a431699c223719aa6ca9e14ec"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structcommand__line__interpreter_1_1Option.xhtml#ae66a42a72e328312c048ce953d020bd6">ArgumentType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structcommand__line__interpreter_1_1Option.xhtml#a8d822e6a431699c223719aa6ca9e14ec">extractArgument</a> (std::vector&lt; std::basic_string&lt; <a class="el" href="structcommand__line__interpreter_1_1Option.xhtml#a781b86871f6516c547bde462f538ce2b">CharT</a> &gt; &gt; &amp;labelValuePairs) const</td></tr>
<tr class="memdesc:a8d822e6a431699c223719aa6ca9e14ec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Searches for the definition of this option and extracts it.  <a href="structcommand__line__interpreter_1_1Option.xhtml#a8d822e6a431699c223719aa6ca9e14ec">More...</a><br /></td></tr>
<tr class="separator:a8d822e6a431699c223719aa6ca9e14ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-attribs" name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a433bc06f0277125316abdebf4acf37fc"><td class="memItemLeft" align="right" valign="top">std::vector&lt; const <a class="el" href="structcommand__line__interpreter_1_1Option.xhtml#a781b86871f6516c547bde462f538ce2b">CharT</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structcommand__line__interpreter_1_1Option.xhtml#a433bc06f0277125316abdebf4acf37fc">labels</a></td></tr>
<tr class="memdesc:a433bc06f0277125316abdebf4acf37fc"><td class="mdescLeft">&#160;</td><td class="mdescRight">A variety of notations for an option label.  <a href="structcommand__line__interpreter_1_1Option.xhtml#a433bc06f0277125316abdebf4acf37fc">More...</a><br /></td></tr>
<tr class="separator:a433bc06f0277125316abdebf4acf37fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a6cb7889b429ef7805043848b19cacc"><td class="memItemLeft" align="right" valign="top">T&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structcommand__line__interpreter_1_1Option.xhtml#a4a6cb7889b429ef7805043848b19cacc">defaultValue</a></td></tr>
<tr class="separator:a4a6cb7889b429ef7805043848b19cacc"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><div class="compoundTemplParams">template&lt;class T, typename CharType = char&gt;<br />
struct command_line_interpreter::Option&lt; T, CharType &gt;</div><p >Extracts data from string options. </p>
<p >Has the definition of variants of option labels. Provides a way to extract data from strings. Contains the default value in case option was not part of strings.</p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">T</td><td>is the type of the argument </td></tr>
    <tr><td class="paramname">CharType</td><td>is the character type to work with </td></tr>
  </table>
  </dd>
</dl>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a id="ae66a42a72e328312c048ce953d020bd6" name="ae66a42a72e328312c048ce953d020bd6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae66a42a72e328312c048ce953d020bd6">&#9670;&#160;</a></span>ArgumentType</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , typename CharType  = char&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">typedef T <a class="el" href="structcommand__line__interpreter_1_1Option.xhtml">command_line_interpreter::Option</a>&lt; T, CharType &gt;::ArgumentType</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a781b86871f6516c547bde462f538ce2b" name="a781b86871f6516c547bde462f538ce2b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a781b86871f6516c547bde462f538ce2b">&#9670;&#160;</a></span>CharT</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , typename CharType  = char&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">typedef CharType <a class="el" href="structcommand__line__interpreter_1_1Option.xhtml">command_line_interpreter::Option</a>&lt; T, CharType &gt;::CharT</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ae1858de91ff7e5d3c9b7fd1fe0e92f19" name="ae1858de91ff7e5d3c9b7fd1fe0e92f19"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae1858de91ff7e5d3c9b7fd1fe0e92f19">&#9670;&#160;</a></span>doesMatchName()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , typename CharType  = char&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="structcommand__line__interpreter_1_1Option.xhtml">command_line_interpreter::Option</a>&lt; T, CharType &gt;::doesMatchName </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structcommand__line__interpreter_1_1Option.xhtml#a781b86871f6516c547bde462f538ce2b">CharT</a> *const&#160;</td>
          <td class="paramname"><em>optionName</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Checks if the name matches one of the labels valid for this option. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">optionName</td><td>the string to compare against </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">true</td><td>in case it matches one of the valid labels </td></tr>
    <tr><td class="paramname">false</td><td>else </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a8d822e6a431699c223719aa6ca9e14ec" name="a8d822e6a431699c223719aa6ca9e14ec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8d822e6a431699c223719aa6ca9e14ec">&#9670;&#160;</a></span>extractArgument()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , typename CharType  = char&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structcommand__line__interpreter_1_1Option.xhtml#ae66a42a72e328312c048ce953d020bd6">ArgumentType</a> <a class="el" href="structcommand__line__interpreter_1_1Option.xhtml">command_line_interpreter::Option</a>&lt; T, CharType &gt;::extractArgument </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; std::basic_string&lt; <a class="el" href="structcommand__line__interpreter_1_1Option.xhtml#a781b86871f6516c547bde462f538ce2b">CharT</a> &gt; &gt; &amp;&#160;</td>
          <td class="paramname"><em>labelValuePairs</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Searches for the definition of this option and extracts it. </p>
<p >The pair of label and value is removed from the sequence.</p>
<p >Interpretation of non-string output data is done via <code>std::basic_istringstream::operator&gt;&gt;()</code>.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">labelValuePairs</td><td>a sequence of (option labels and option values) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>either the value found in the sequence or the default value for this option </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::runtime_error</td><td>in case a label for this option is found but interpreting the value failed. This can happen in case the value is given in an incompatible format. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a4a6cb7889b429ef7805043848b19cacc" name="a4a6cb7889b429ef7805043848b19cacc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4a6cb7889b429ef7805043848b19cacc">&#9670;&#160;</a></span>defaultValue</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , typename CharType  = char&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">T <a class="el" href="structcommand__line__interpreter_1_1Option.xhtml">command_line_interpreter::Option</a>&lt; T, CharType &gt;::defaultValue</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a433bc06f0277125316abdebf4acf37fc" name="a433bc06f0277125316abdebf4acf37fc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a433bc06f0277125316abdebf4acf37fc">&#9670;&#160;</a></span>labels</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , typename CharType  = char&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;const <a class="el" href="structcommand__line__interpreter_1_1Option.xhtml#a781b86871f6516c547bde462f538ce2b">CharT</a> *&gt; <a class="el" href="structcommand__line__interpreter_1_1Option.xhtml">command_line_interpreter::Option</a>&lt; T, CharType &gt;::labels</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A variety of notations for an option label. </p>
<p >For example "tasks", "--tasks", or "-t". </p>

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li>lib/application_business_rules/serial_interface/<a class="el" href="command__line__interpreter_8hpp_source.xhtml">command_line_interpreter.hpp</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Jan 15 2024 21:11:08 for Task Tracker by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.5
</small></address>
</body>
</html>
