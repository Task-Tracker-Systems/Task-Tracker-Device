<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.5"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Task Tracker: FunctionPointerGenerator&lt; T, N &gt; Struct Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.jsdelivr.net/npm/mathjax@2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Task Tracker
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.5 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="structFunctionPointerGenerator-members.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">FunctionPointerGenerator&lt; T, N &gt; Struct Template Reference</div></div>
</div><!--header-->
<div class="contents">

<p>Generator for ISR function pointers.  
 <a href="structFunctionPointerGenerator.xhtml#details">More...</a></p>
<div class="dynheader">
Collaboration diagram for FunctionPointerGenerator&lt; T, N &gt;:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="structFunctionPointerGenerator__coll__graph.svg" width="186" height="95"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a74775f17117f114bbdb68940c73c7113"><td class="memTemplParams" colspan="2">template&lt;T(&amp;) VALUES&gt; </td></tr>
<tr class="memitem:a74775f17117f114bbdb68940c73c7113"><td class="memTemplItemLeft" align="right" valign="top">static constexpr auto&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="structFunctionPointerGenerator.xhtml#a74775f17117f114bbdb68940c73c7113">createIsrPointers</a> ()</td></tr>
<tr class="memdesc:a74775f17117f114bbdb68940c73c7113"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an array of function pointers to interrupt functions.  <a href="structFunctionPointerGenerator.xhtml#a74775f17117f114bbdb68940c73c7113">More...</a><br /></td></tr>
<tr class="separator:a74775f17117f114bbdb68940c73c7113"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5637e14fb7be137157a6840e04e02603"><td class="memTemplParams" colspan="2">template&lt;T(&amp;) VALUES, std::size_t... Is&gt; </td></tr>
<tr class="memitem:a5637e14fb7be137157a6840e04e02603"><td class="memTemplItemLeft" align="right" valign="top">static constexpr std::array&lt; void(*)(), N &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="structFunctionPointerGenerator.xhtml#a5637e14fb7be137157a6840e04e02603">createIsrPointers</a> (const std::index_sequence&lt; Is... &gt; indices)</td></tr>
<tr class="memdesc:a5637e14fb7be137157a6840e04e02603"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an array of function pointers to interrupt functions.   <a href="structFunctionPointerGenerator.xhtml#a5637e14fb7be137157a6840e04e02603">More...</a><br /></td></tr>
<tr class="separator:a5637e14fb7be137157a6840e04e02603"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><div class="compoundTemplParams">template&lt;class T, std::size_t N&gt;<br />
struct FunctionPointerGenerator&lt; T, N &gt;</div><p >Generator for ISR function pointers. </p>
<p >Uses an array to instantiate function templates and assembles an array of function pointers to those instances. This is used to attach a value to the ISRs which can not accept any argument. Instead the value is provided as non-type template argument to the ISR function template.</p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">T</td><td>type of the array elements </td></tr>
    <tr><td class="paramname">N</td><td>number of the array elements </td></tr>
  </table>
  </dd>
</dl>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a74775f17117f114bbdb68940c73c7113" name="a74775f17117f114bbdb68940c73c7113"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a74775f17117f114bbdb68940c73c7113">&#9670;&#160;</a></span>createIsrPointers() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , std::size_t N&gt; </div>
<div class="memtemplate">
template&lt;T(&amp;) VALUES&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static constexpr auto <a class="el" href="structFunctionPointerGenerator.xhtml">FunctionPointerGenerator</a>&lt; T, N &gt;::createIsrPointers </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates an array of function pointers to interrupt functions. </p>
<p >Passing the values as template argument is necessary as they will be evaluated at compile time for instantiating the function templates.</p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">VALUES</td><td>array containing the values used for ISR function template instantiation </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with the same number of function pointers as the number of elements of the input values array </dd></dl>

</div>
</div>
<a id="a5637e14fb7be137157a6840e04e02603" name="a5637e14fb7be137157a6840e04e02603"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5637e14fb7be137157a6840e04e02603">&#9670;&#160;</a></span>createIsrPointers() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , std::size_t N&gt; </div>
<div class="memtemplate">
template&lt;T(&amp;) VALUES, std::size_t... Is&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static constexpr std::array&lt; void(*)(), N &gt; <a class="el" href="structFunctionPointerGenerator.xhtml">FunctionPointerGenerator</a>&lt; T, N &gt;::createIsrPointers </td>
          <td>(</td>
          <td class="paramtype">const std::index_sequence&lt; Is... &gt;&#160;</td>
          <td class="paramname"><em>indices</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates an array of function pointers to interrupt functions.  </p>
<p >Passing the values as template argument is necessary as they will be evaluated at compile time for instantiating the function templates.</p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">VALUES</td><td>array containing the values used for ISR function template instantiation </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with the same number of function pointers as the number of elements of the input values array  </dd></dl>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">Is</td><td>is a sequence of the indices to be used to access the array elements </td></tr>
  </table>
  </dd>
</dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">indices</td><td>is an object to derive <code>Is</code> </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li>lib/board_adapters/<a class="el" href="board_8cpp.xhtml">board.cpp</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Tue Dec 19 2023 21:52:35 for Task Tracker by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.5
</small></address>
</body>
</html>
