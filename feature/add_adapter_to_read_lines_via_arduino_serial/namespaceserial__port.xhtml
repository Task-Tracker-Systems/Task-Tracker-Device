<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.5"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Task Tracker: serial_port Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.jsdelivr.net/npm/mathjax@2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Task Tracker
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.5 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle"><div class="title">serial_port Namespace Reference</div></div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="typedef-members" name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:a839d45b607d3bc6cf84065572f0cb735"><td class="memItemLeft" align="right" valign="top">typedef std::function&lt; void(const std::string &amp;)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceserial__port.xhtml#a839d45b607d3bc6cf84065572f0cb735">StringHandler</a></td></tr>
<tr class="separator:a839d45b607d3bc6cf84065572f0cb735"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:af033b97544f5d1bba48bf19f2a336608"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceserial__port.xhtml#af033b97544f5d1bba48bf19f2a336608">initialize</a> ()</td></tr>
<tr class="memdesc:af033b97544f5d1bba48bf19f2a336608"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configures and initializes serial port.  <a href="namespaceserial__port.xhtml#af033b97544f5d1bba48bf19f2a336608">More...</a><br /></td></tr>
<tr class="separator:af033b97544f5d1bba48bf19f2a336608"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6cdebd7f35f262ff9dbbe728722b6973"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceserial__port.xhtml#a6cdebd7f35f262ff9dbbe728722b6973">readLine</a> ()</td></tr>
<tr class="memdesc:a6cdebd7f35f262ff9dbbe728722b6973"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reads a line from serial port.  <a href="namespaceserial__port.xhtml#a6cdebd7f35f262ff9dbbe728722b6973">More...</a><br /></td></tr>
<tr class="separator:a6cdebd7f35f262ff9dbbe728722b6973"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6c8af59bd81882c7b16c860ce5fdf52"><td class="memItemLeft" align="right" valign="top">std::optional&lt; std::string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceserial__port.xhtml#ab6c8af59bd81882c7b16c860ce5fdf52">getLine</a> ()</td></tr>
<tr class="memdesc:ab6c8af59bd81882c7b16c860ce5fdf52"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a line from serial port.  <a href="namespaceserial__port.xhtml#ab6c8af59bd81882c7b16c860ce5fdf52">More...</a><br /></td></tr>
<tr class="separator:ab6c8af59bd81882c7b16c860ce5fdf52"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea06adad95c0b700fb92e4d73e47b728"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceserial__port.xhtml#aea06adad95c0b700fb92e4d73e47b728">subscribeToIncomingLine</a> (const <a class="el" href="namespaceserial__port.xhtml#a839d45b607d3bc6cf84065572f0cb735">StringHandler</a> &amp;callback)</td></tr>
<tr class="separator:aea06adad95c0b700fb92e4d73e47b728"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="var-members" name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:aff084dc54fbe3b3e2fe93631562c34c4"><td class="memItemLeft" align="right" valign="top">std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceserial__port.xhtml#aff084dc54fbe3b3e2fe93631562c34c4">cout</a> = serialOutputStream</td></tr>
<tr class="memdesc:aff084dc54fbe3b3e2fe93631562c34c4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Output stream for characters to serial port.  <a href="namespaceserial__port.xhtml#aff084dc54fbe3b3e2fe93631562c34c4">More...</a><br /></td></tr>
<tr class="separator:aff084dc54fbe3b3e2fe93631562c34c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="a839d45b607d3bc6cf84065572f0cb735" name="a839d45b607d3bc6cf84065572f0cb735"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a839d45b607d3bc6cf84065572f0cb735">&#9670;&#160;</a></span>StringHandler</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef std::function&lt;void(const std::string &amp;)&gt; <a class="el" href="namespaceserial__port.xhtml#a839d45b607d3bc6cf84065572f0cb735">serial_port::StringHandler</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="ab6c8af59bd81882c7b16c860ce5fdf52" name="ab6c8af59bd81882c7b16c860ce5fdf52"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab6c8af59bd81882c7b16c860ce5fdf52">&#9670;&#160;</a></span>getLine()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::optional&lt; std::string &gt; serial_port::getLine </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets a line from serial port. </p>
<p >Interprets the end of line as <code>\n</code>. </p><dl class="section return"><dt>Returns</dt><dd>an object that does not contain a value in case no data is already available. </dd></dl>

</div>
</div>
<a id="af033b97544f5d1bba48bf19f2a336608" name="af033b97544f5d1bba48bf19f2a336608"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af033b97544f5d1bba48bf19f2a336608">&#9670;&#160;</a></span>initialize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void serial_port::initialize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Configures and initializes serial port. </p>

</div>
</div>
<a id="a6cdebd7f35f262ff9dbbe728722b6973" name="a6cdebd7f35f262ff9dbbe728722b6973"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6cdebd7f35f262ff9dbbe728722b6973">&#9670;&#160;</a></span>readLine()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string serial_port::readLine </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reads a line from serial port. </p>
<p >Interprets the end of line as <code>\n</code>. It will wait for data for the duration of the timeout. </p><dl class="section return"><dt>Returns</dt><dd>an empty string in case no data is read </dd></dl>

</div>
</div>
<a id="aea06adad95c0b700fb92e4d73e47b728" name="aea06adad95c0b700fb92e4d73e47b728"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aea06adad95c0b700fb92e4d73e47b728">&#9670;&#160;</a></span>subscribeToIncomingLine()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void serial_port::subscribeToIncomingLine </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceserial__port.xhtml#a839d45b607d3bc6cf84065572f0cb735">StringHandler</a> &amp;&#160;</td>
          <td class="paramname"><em>callback</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a id="aff084dc54fbe3b3e2fe93631562c34c4" name="aff084dc54fbe3b3e2fe93631562c34c4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aff084dc54fbe3b3e2fe93631562c34c4">&#9670;&#160;</a></span>cout</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::ostream &amp; serial_port::cout = serialOutputStream</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Output stream for characters to serial port. </p>
<dl class="section pre"><dt>Precondition</dt><dd>call <a class="el" href="namespaceserial__port.xhtml#af033b97544f5d1bba48bf19f2a336608">initialize()</a> before using </dd></dl>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Tue Nov 14 2023 13:33:07 for Task Tracker by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.5
</small></address>
</body>
</html>
